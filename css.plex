<?php
class CSSLexer {
    private $data;
    private $N;
    public $token;
    public $value;
    private $line;

    function __construct($data) {
        $this->data = $data;
        $this->N = 0;
        $this->line = 1;
    }

/*!lex2php
%input $this->data
%counter $this->N
%token $this->token
%value $this->value
%line $this->line

h        = /[a-fA-F0-9]/
nonascii = /[\x80-\xFF]/
unicode  = /\\[a-fA-F0-9]{1,6}(\r\n|[ \t\r\n\f])?/
escape   = /\\[a-fA-F0-9]{1,6}(\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F]/
nmstart  = /(?:[_a-zA-Z\x80-\xFF]|\\[a-fA-F0-9]{1,6}(?:\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F])/
nmchar   = /[_a-zA-Z0-9\-\x80-\xFF]|\\[a-fA-F0-9]{1,6}(?:\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F]/
VEND     = /-?/
NMCONT   = /(?:[_a-zA-Z0-9\-\x80-\xFF]|\\[a-fA-F0-9]{1,6}(?:\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F])*/
NAME     = /(?:[_a-zA-Z0-9\-\x80-\xFF]|\\[a-fA-F0-9]{1,6}(?:\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F])+/
STRING1  = /"(?:[^\n\r\f\\"]|\\(?:\n|\r\n|\r))*"/
BADSTRING1 = /"(?:[^\n\r\f\\"]|\\(?:\n|\r\n|\r))*\\?/
STRING2  = /'(?:[^\n\r\f\\']|\\(?:\n|\r\n|\r))*'/
BADSTRING2 = /'(?:[^\n\r\f\\']|\\(?:\n|\r\n|\r))*\\?/
comment  = /\/\*[^*]*\*+(?:[^\/*][^*]*\*+)*\//
num      = /(?:[0-9]+|[0-9]*\.[0-9]+)/
url      = /(?:[!#$%&*-~\x80-\xFF]|\\[a-fA-F0-9]{1,6}(?:\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F])*/
BADURI1  = /url\([ \n\r\t\f]*(?:[!#$%&*-\[\]-~\x80-\xFF]|\\[a-fA-F0-9]{1,6}(?:\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F])*[ \n\r\t\f]*/
s = /[ \n\r\t\f]+/
w = /[ \n\r\t\f]*/
worcom = /(?:[ \n\r\t\f]|\/\*[^*]*\*+(?:[^\/*][^*]*\*+)*\/)*/
A = /(?:a|\\0{0,4}(41|61)(?:\r\n|[ \t\r\n\f])?)/
C = /(?:c|\\0{0,4}(43|63)(?:\r\n|[ \t\r\n\f])?)/
D = /(?:d|\\0{0,4}(44|64)(?:\r\n|[ \t\r\n\f])?)/
E = /(?:e|\\0{0,4}(45|65)(?:\r\n|[ \t\r\n\f])?)/
G = /(?:g|\\0{0,4}(47|67)(?:\r\n|[ \t\r\n\f])?|\\g)/
H = /(?:h|\\0{0,4}(48|68)(?:\r\n|[ \t\r\n\f])?|\\h)/
I = /(?:i|\\0{0,4}(49|69)(?:\r\n|[ \t\r\n\f])?|\\i)/
K = /(?:k|\\0{0,4}(4b|6b)(?:\r\n|[ \t\r\n\f])?|\\k)/
L = /(?:l|\\0{0,4}(4c|6c)(?:\r\n|[ \t\r\n\f])?|\\l)/
M = /(?:m|\\0{0,4}(4d|6d)(?:\r\n|[ \t\r\n\f])?|\\m)/
N = /(?:n|\\0{0,4}(4e|6e)(?:\r\n|[ \t\r\n\f])?|\\n)/
O = /(?:o|\\0{0,4}(4f|6f)(?:\r\n|[ \t\r\n\f])?|\\o)/
P = /(?:p|\\0{0,4}(50|70)(?:\r\n|[ \t\r\n\f])?|\\p)/
R = /(?:r|\\0{0,4}(52|72)(?:\r\n|[ \t\r\n\f])?|\\r)/
S = /(?:s|\\0{0,4}(53|73)(?:\r\n|[ \t\r\n\f])?|\\s)/
T = /(?:t|\\0{0,4}(54|74)(?:\r\n|[ \t\r\n\f])?|\\t)/
U = /(?:u|\\0{0,4}(55|75)(?:\r\n|[ \t\r\n\f])?|\\u)/
X = /(?:x|\\0{0,4}(58|78)(?:\r\n|[ \t\r\n\f])?|\\x)/
Z = /(?:z|\\0{0,4}(5a|7a)(?:\r\n|[ \t\r\n\f])?|\\z)/
ANYTHING = /./
*/
/*!lex2php
%statename YYINITIAL
s {
    $this->token = "S";
}
comment {
    $this->token = "COMMENT";
}
"<!--" {
    $this->token = "CDO";
}
"-->" {
    $this->token = "CDC";
}
"~=" {
    $this->token = "INCLUDES";
}
"|=" {
    $this->token = "DASHMATCH";
}
STRING1 {
    $this->token = "STRING";
}
BADSTRING1 {
    $this->token = "BAD_STRING";
}
VEND nmstart NMCONT {
    $this->token = "IDENT";
}
"#" NAME {
    $this->token = "HASH";
}
"@" I M P O R T {
    $this->token = "IMPORT_SYM";
}
"@" P A G E {
    $this->token = "PAGE_SYM";
}
"@" M E D I A {
    $this->token = "MEDIA_SYM";
}
"@charset " {
    $this->token = "CHARSET_SYM";
}
"!" worcom I M P O R T A N T {
    $this->token = "IMPORTANT_SYM";
}
num E M {
    $this->token = "EMS";
}
num E X {
    $this->token = "EXS";
}
num P X {
    $this->token = "LENGTH";
}
num C M {
    $this->token = "LENGTH";
}
num M M {
    $this->token = "LENGTH";
}
num I N {
    $this->token = "LENGTH";
}
num P T {
    $this->token = "LENGTH";
}
num P C {
    $this->token = "LENGTH";
}
num D E G {
    $this->token = "ANGLE";
}
num R A D {
    $this->token = "ANGLE";
}
num G R A D {
    $this->token = "ANGLE";
}
num M S {
    $this->token = "TIME";
}
num S {
    $this->token = "TIME";
}
num H Z {
    $this->token = "FREQ";
}
num K H Z {
    $this->token = "FREQ";
}
num VEND nmstart NMCONT {
    $this->token = "DIMENSION";
}
num "%" {
    $this->token = "PERCENTAGE";
}
num {
    $this->token = "NUMBER";
}
"url(" w STRING1 w ")" {
    $this->token = "URI";
}
"url(" w url w ")" {
    $this->token = "URI";
}
BADURI1 {
    $this->token = "BAD_URI";
}
"url(" w STRING1 w {
    $this->token = "BAD_URI";
}
"url(" w BADSTRING1 {
    $this->token = "BAD_URI";
}
VEND nmstart NMCONT "(" {
    $this->token = "FUNCTION";
}
ANYTHING {
    $this->token = "YYTEXT";
}
*/
}

//__END__
